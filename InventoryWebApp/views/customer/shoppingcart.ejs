<!DOCTYPE html>
<html lang="en">

<head>
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <!-- site metas -->
    <title>sbs</title>
    <meta name="keywords" content="">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">    
    <!-- bootstrap css -->
    <link rel="stylesheet" href="/public/css/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" href="/public/css/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/public/css/responsive.css">
    <!-- fevicon -->
    <link rel="icon" href="/public/images/fevicon.png" type="image/gif" />
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css">
    <!-- Custom Styles -->
    <link rel="stylesheet" href="/public/css/style1.css">
    <link rel="stylesheet" href="/public/css/styles.css">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <!-- Fonts & Icons -->
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">

    <!-- jQuery, Popper.js, and Bootstrap JavaScript -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <style>
        .navbar {
            top: 0;
            flex-direction: row;
            align-items: center;
            padding: 2rem;
            justify-content: left;
        }

        .nav-item {
            width: 100%;
            margin-bottom: 0.5rem;
            padding-left: 1rem;
        }

        .nav-link {
            display: flex;
            align-items: center;
            justify-content: left;
            padding: 0.5rem 2rem;
            width: 100%;
        }

        .active-nav-item .nav-link {
            background-color: black;
            color: white;
            padding: 10px;
        }

        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: #fcfcfc;
            display: flex;
            align-items: center;
            justify-content: space-between;
          
        }

        /* Add styles for the main content area */
        .content {
            margin-top: 80px; /* Adjust margin to make content start below the header */
        }

        /* Adjust table styles to take full remaining width */
        table {
            width: 100%;
        }  
        
        body {
            padding-top: 56px;
        }

        .category-table th, .category-table td {
            text-align: center;
        }

        .edit-modal {
            margin-top: 50px;
        }     
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
        }

        .product-card {
            border: 1px solid #ddd;
            padding: 15px;
            text-align: center;
        }    
        body {
            padding-top: 56px;
        }

        .order-table th, .order-table td {
            text-align: center;
        }

        .edit-modal {
            margin-top: 50px;
        }     
        .cart {
            margin-top: 50px;
        }

        .cart-item {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }

        .checkout {
            margin-top: 20px;
            text-align: right;
        }  
    </style>
</head>

<body class="main-layout">
    <!-- Add your body content here -->
    <!-- loader -->
    <div class="navbar theme-orange shadowNav " style="border: 1px solid 1px solid rgb(230 230 230);">
        <div>
            <div style="padding-left: 1rem;height: 13rem">
                <img src="/public/images/1.png" alt="" class="avatar">
                <h2 style="font-size: 0.8rem;color: #2d2d2d;font-weight: bold;width: 100%;padding-top: 3rem;">
                    Welcome back
                </h2>
            </div>
            <ul class="navbar-nav" style="display: flex; flex-direction: column; justify-content: center; align-items: center;">
                <li class="nav-item">
                    <a class="nav-link" href="/shop">Shop<i class="fas fa-shopping-cart"></i></a>
                </li>
                <li class="nav-item" style="width: 100%; border-top-left-radius: 6px; border-bottom-left-radius: 6px;">
                    <a class="nav-link" href="/shoppingcart">Shopping Cart<i class="fas fa-shopping-basket"></i></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/login">Logout<i class="fas fa-sign-out-alt"></i></a>
                </li>
            </ul>                      
        </div>

    </div>
    <!-- end header inner -->
    <!-- end header -->
    <!-- top -->
    <div class="main-content" style="margin:0rem;">

        <div class="shadowNav" style="    
        z-index: 2;
        background-color: #fcfcfc;
        display: grid;
        height: 11vh;
        grid-template-columns: 60% 40%;
  align-items: center;
        flex-direction: row;
        position: fixed;
        width: 100%;
        justify-content: left;
  border: 1px solid 1px solid rgb(230 230 230);
  
  ">
              <div style="display: flex;width: 100%;justify-content: center;">
                    <h6 style="   font-weight: 800;
                    font-size: 1.5em;
                    padding-left: 15rem;">Shopping Cart
                    </h6>
              </div>
    </div>

        <!-- Content Area -->
        <div class="contact" style="width: 100%; overflow-y: auto;">
            <div>
                <div class="row">
                    <div class="col-md-12">
                    <div class="container">
                    <!-- Shopping Cart Items -->
                    <div class="col-md-8 cart" id="cartItems">
                        <!-- Cart items will be dynamically populated here -->
                    </div>
        
                    <!-- Total and Checkout -->
                    <div class="col-md-4">
                        <div class="cart-total">
                            <h3>Total Cost</h3>
                            <p id="totalCost">R0.00</p>
                        </div>
                        <div class="checkout">
                            <button class="subsci_btn" onclick="proceedToCheckout()">Place Order</button>
                        </div>
                    </div>
                </div>
            </div>
                </div>
            </div>
        </div>

        
</div>



   <!-- JavaScript files-->
   <script src="/public/js/jquery.min.js"></script>
   <script src="/public/js/bootstrap.bundle.min.js"></script>
   <script src="/public/js/jquery-3.0.0.min.js"></script>
   <!-- sidebar -->
   <script src="/public/js/custom.js"></script>
   <script>
      document.addEventListener("DOMContentLoaded", function () {
          // Fetch products and cart items from local storage
          const productsArray = JSON.parse(localStorage.getItem("products")) || [];
          const cartItems = JSON.parse(localStorage.getItem("cart")) || [];
  
          // Populate the shopping cart
          const cartContainer = document.getElementById("cartItems");
          const totalCostElement = document.getElementById("totalCost");
  
          let totalCost = 0;
  
          cartItems.forEach(cartItem => {
              // Find the corresponding product in the products array
              const product = productsArray.find(product => product.productId === cartItem.productId);
  
              if (product) {
                  // Create a cart item
                  const cartItemElement = document.createElement("div");
                  cartItemElement.classList.add("cart-item");
  
                  // Calculate the item cost
                  const itemCost = cartItem.quantity * product.productSellingPrice;
                  totalCost += itemCost;
  
                  // Add item details to the cart item
                  cartItemElement.innerHTML = `
                      <h4>${product.productName}</h4>
                      <p>Quantity: ${cartItem.quantity}</p>
                      <p>Price: R${product.productSellingPrice.toFixed(2)}</p>
                      <p>Total: R${itemCost.toFixed(2)}</p>
                  `;
  
                  // Append the cart item to the cart container
                  cartContainer.appendChild(cartItemElement);
              }
          });
  
          // Update the total cost
          totalCostElement.textContent = `R${totalCost.toFixed(2)}`;
      });
  
      // Function to proceed to checkout
      function proceedToCheckout() {
          // Fetch user details (assuming you have a way to get the user ID)
          const userId = 1; // Replace with your actual logic to get the user ID
  
          // Create order object
          const order = {
              categoryId: 0,
              userId: userId,
              productId: 0,
              quantity: 0,
              totalPrice: 0,
              dateOfOrder: new Date().toISOString(),
              dateFulfilled: null,
          };
  
          // Fetch products and cart items from local storage
          const productsArray = JSON.parse(localStorage.getItem("products")) || [];
          const cartItems = JSON.parse(localStorage.getItem("cart")) || [];
          const randomDate = new Date().toISOString();
          // Send a POST request for each item in the cart
          cartItems.forEach(cartItem => {
              const product = productsArray.find(product => product.productId === cartItem.productId);
  
              if (product) {
                  // Update order details
                  order.categoryId = product.categoryId;
                  order.productId = product.productId;
                  order.quantity = cartItem.quantity;
                  order.totalPrice = cartItem.quantity * product.productSellingPrice;
                  order.dateFulfilled = randomDate;
                  console.log("The order being placed is: ",order);
                  // Send a POST request to the endpoint
                  fetch('http://localhost:5358/api/customerproductorders', {
                      method: 'POST',
                      headers: {
                          'Content-Type': 'application/json',
                      },
                      body: JSON.stringify(order),
                  })
                  .then(response => response.json())
                  .then(data => {
                      console.log('Order placed:', data);
                      // Assuming you want to clear the cart after placing the order
                      localStorage.setItem("cart", JSON.stringify([]));
                  })
                  .catch(error => {
                      console.error('Error placing order:', error);
                  });
              }
          });
          localStorage.removeItem("cart");
          // Implement the logic to proceed to checkout, e.g., redirect to a checkout page
          console.log("Proceed to checkout");
      }
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get all nav items
        const navItems = document.querySelectorAll('.nav-item');
        const navLinks = document.querySelectorAll('.nav-link');

        // Function to remove active class from all items
        function removeActiveClass() {
            navItems.forEach((innerItem) => innerItem.classList.remove('active-nav-item'));
        }

        // Add click event listener to each nav item
        navItems.forEach((item, index) => {
            item.addEventListener('click', function () {
                removeActiveClass();
                // Add active class to clicked item
                this.classList.add('active-nav-item');
            });
        });

        // Check current URL and set active class
        const currentURL = window.location.pathname;
        navLinks.forEach((link, index) => {
            if (link.getAttribute('href') === currentURL) {
                removeActiveClass();
                navItems[index].classList.add('active-nav-item');
            }
        });
    });

</script>
  
</body>

</html>
