<!DOCTYPE html>
<html lang="en">

<head>
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <!-- site metas -->
    <title>sbs</title>
    <meta name="keywords" content="">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">    
    <!-- bootstrap css -->
    <link rel="stylesheet" href="/public/css/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" href="/public/css/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/public/css/responsive.css">
    <!-- fevicon -->
    <link rel="icon" href="/public/images/fevicon.png" type="image/gif" />
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css">
    <!-- Custom Styles -->
    <link rel="stylesheet" href="/public/css/style1.css">
    <link rel="stylesheet" href="/public/css/styles.css">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <!-- Fonts & Icons -->
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">

    <!-- jQuery, Popper.js, and Bootstrap JavaScript -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <style>
        .navbar {

            flex-direction: row;
            align-items: center;
            padding: 2rem;
            justify-content: left;
        }

        .nav-item {
            width: 100%;
            margin-bottom: 0.5rem;
            padding-left: 1rem;
        }

        .nav-link {
            display: flex;
            align-items: center;
            justify-content: left;
            padding: 0.5rem 2rem;
            width: 100%;
        }

        .active-nav-item .nav-link {
            background-color: black;
            color: white;
            padding: 10px;
        }

        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: #fcfcfc;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem 2rem; /* Adjust padding as needed */
        }

        /* Add styles for the main content area */
        .content {
            margin-top: 80px; /* Adjust margin to make content start below the header */
        }

        /* Adjust table styles to take full remaining width */
        table {
            width: 100%;
        }  
        
        body {
            padding-top: 56px;
        }

        .category-table th, .category-table td {
            text-align: center;
        }

        .edit-modal {
            margin-top: 50px;
        }     
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
        }

        .product-card {
            border: 1px solid #ddd;
            padding: 15px;
            text-align: center;
        }    
        body {
            padding-top: 56px;
        }

        .order-table th, .order-table td {
            text-align: center;
        }

        .edit-modal {
            margin-top: 50px;
        }     
        .cart {
            margin-top: 50px;
        }

        .cart-item {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }

        .checkout {
            margin-top: 20px;
            text-align: right;
        }  

        .button-style {
         padding: 15px 30px;
         font-size: 17px;
         line-height: 20px;
         font-weight: 400;
         border-radius: 30px;
         text-transform: uppercase;
         color: #fff;
         background: #f0390f;
         margin-top: 10px;
        padding: 10px 20px;
        }        
    </style>
</head>

<body class="main-layout">
    <!-- Add your body content here -->
    <!-- loader -->
    <div class="navbar theme-orange shadowNav " style="border: 1px solid 1px solid rgb(230 230 230);">
        <div>
            <div style="padding-left: 1rem;height: 13rem">
                <img src="/public/images/1.png" alt="" class="avatar">
                <h2 style="font-size: 0.8rem;color: #2d2d2d;font-weight: bold;width: 100%;padding-top: 3rem;">
                    Welcome back
                </h2>
            </div>
            <ul class="navbar-nav" style="display: flex; flex-direction: column; justify-content: center; align-items: center;">
                <li class="nav-item">
                    <a class="nav-link" href="/createmenu">Create Menu<i class="fas fa-shopping-cart"></i></a>
                </li>
                <li class="nav-item" style="width: 100%; border-top-left-radius: 6px; border-bottom-left-radius: 6px;">
                    <a class="nav-link" href="/customerordermanagement">Customer Orders<i class="fas fa-shopping-basket"></i></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/purchaseorder">Supplier Order<i class="fas fa-truck"></i></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/viewupdatecategories">Manage Categories<i class="fas fa-list-alt"></i></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/productsmanagement">Manage Products<i class="fas fa-cubes"></i></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/report">Reports<i class="fas fa-chart-bar"></i></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/logout">Logout<i class="fas fa-sign-out-alt"></i></a>
                </li>
            </ul> 
        </div>

    </div>            
    <!-- end header inner -->
    <!-- end header -->
    <!-- top -->

    <div class="main-content" style="margin:0rem;">

        <div class="shadowNav" style="    
        z-index: 2;
        background-color: #fcfcfc;
        display: grid;
        height: 11vh;
        grid-template-columns: 60% 40%;
  align-items: center;
        flex-direction: row;
        position: fixed;
        width: 100%;
        justify-content: left;
  border: 1px solid 1px solid rgb(230 230 230);
  
  ">
              <div style="display: flex;width: 100%;justify-content: center;">
                    <h6 style="   font-weight: 800;
                    font-size: 1.5em;
                    padding-left: 15rem;">Manage Products
                    </h6>
              </div>
    </div>

    <div class="contact" style="width: 100%; overflow-y: auto; ">
        <div class="container">
            <div class="row">
        <!-- Place content here -->
        <!-- Display product table here with button to edit and button to delete product -->
        <div class="col-md-6">
            <!-- Table to list categories -->
            <h3>Update Products</h3>
            <table class="table table-bordered category-table">
                <thead class="thead-dark">
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="productsTableBody"></tbody>
            </table>
        </div>    
            </div>
        </div>
    </div>  
</div>    

<!-- Edit Product Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Add form fields for editing the product -->
                <form id="editProductForm">
                    <!-- Your form fields here -->
                    <div class="form-group">
                        <label for="editedProductName">Product Name</label>
                        <input type="text" class="form-control" id="editedProductName" placeholder="Enter product name">
                    </div>
                    <!-- Add other form fields as needed -->
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="button-style" data-dismiss="modal">Close</button>
                <button type="button" class="button-style" id="saveEditedProductButton">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Product Modal -->
<div class="modal fade" id="deleteProductModal" tabindex="-1" role="dialog" aria-labelledby="deleteProductModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteProductModalLabel">Confirm Deletion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this product?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="button-style" data-dismiss="modal">Cancel</button>
                <button type="button" class="button-style" id="confirmDeleteProductButton">Delete</button>
            </div>
        </div>
    </div>
</div>

    <!-- Modal for editing category -->
    <div class="modal fade" id="editCategoryModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Edit Product</h5>
                    <button type="button" class="button-style" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Form to edit category -->
                    <form id="editProductForm">
                        <input type="hidden" id="editProductId">
                        <div class="form-group">
                            <label for="editProductName">Product Name:</label>
                            <input type="text" class="form-control" id="editProductName" required>
                        </div>
                        <div class="form-group">
                            <label for="editProductImage">Product Description</label>
                            <input type="text" class="form-control" id="editProductImage" required>
                        </div>
                        <button class="button-style" onclick="updateCategory(event)">Update Product</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

 <!-- JavaScript files-->
 <script src="/public/js/jquery.min.js"></script>
 <script src="/public/js/bootstrap.bundle.min.js"></script>
 <script src="/public/js/jquery-3.0.0.min.js"></script>
 <!-- sidebar -->
 <script src="/public/js/custom.js"></script>
 <!-- <script>
    AOS.init();
 </script> -->
 <script>
    let AllPrductsArray = [];
    document.addEventListener("DOMContentLoaded", function () {


        // fetch all the products and assign to AllPrductsArray
        fetch("http://localhost:5358/api/products/all")
                       .then(response => {
                           if (!response.ok) {
                               throw new Error(`HTTP error! Status: ${response.status}`);
                           }
                           return response.json(); // Assuming the server responds with JSON
                       })
                       .then(products => {
                        AllPrductsArray = products;
                        console.log("The products from the api are: ",products);
                        const productsTable = document.getElementById("productsTableBody");
                        productsTable.innerHTML = "";
                        products.forEach(product => {
                        const row = document.createElement("tr");
                        row.innerHTML = `
                            <td>${product.productName}</td>
                            <td>${product.productImage}</td>
                            <td>
                                <button class="button-style" onclick="openEditModal(${product.productId},'${product.productName}','${product.productImage}')">Edit</button>
                            </td>
                        `;
                        productsTable.appendChild(row);
                    });                        
                       })
                       .catch(error => {
                           // Handle errors
                           console.error('Fetch create product error:', error);
                       });

        // submit product for edit by its id

        // submit productid for deleting a product
    });

        // populate the table by body id with info about product as well as edit and delete button
        // add event listeners for each edit and update button so that the product considered is tracked
        function openEditModal(productId, productName, productImage) {
            document.getElementById("editProductId").value = productId;
            document.getElementById("editProductName").value = productName;
            document.getElementById("editProductImage").value = productImage;
            $('#editCategoryModal').modal('show');
        }

        function fetchAllProducts() {
        // fetch all the products and assign to AllPrductsArray
        fetch("http://localhost:5358/api/products/all")
                       .then(response => {
                           if (!response.ok) {
                               throw new Error(`HTTP error! Status: ${response.status}`);
                           }
                           return response.json(); // Assuming the server responds with JSON
                       })
                       .then(products => {
                        AllPrductsArray = products;
                        console.log("The products from the api are: ",products);
                        const productsTable = document.getElementById("productsTableBody");
                        productsTable.innerHTML = "";
                        products.forEach(product => {
                        const row = document.createElement("tr");
                        row.innerHTML = `
                            <td>${product.productName}</td>
                            <td>${product.productImage}</td>
                            <td>
                                <button class="button-style" onclick="openEditModal(${product.productId},'${product.productName}','${product.productImage}')">Edit</button>
                            </td>
                        `;
                        productsTable.appendChild(row);
                    });                        
                       })
                       .catch(error => {
                           // Handle errors
                           console.error('Fetch create product error:', error);
                       });            
        }

        function updateCategory(event) {
            event.preventDefault();
            const productId = document.getElementById("editProductId").value;
            const productName = document.getElementById("editProductName").value;
            const productImage = document.getElementById("editProductImage").value;

            const productConsidered = AllPrductsArray.find(product=> product.productId == productId);

            fetch(`http://localhost:5358/api/products/Product/${productId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    "productId": productId,
                    "productName": productName,
                    "productImage": productImage,
                    "categoryId": productConsidered.categoryId,
                    "unitsInInventory": productConsidered.unitsInInventory,
                    "markupPercentage": productConsidered.markupPercentage,
                    "productSellingPrice": productConsidered.productSellingPrice,
                    "productCostPrice": productConsidered.productCostPrice,
                    "supplierPrice": productConsidered.supplierPrice,
                    "storeSellingPrice": productConsidered.storeSellingPrice,
                    "minimumThreshold": productConsidered.minimumThreshold,
                    "maximumThreshold": productConsidered.maximumThreshold,
                    "status": productConsidered.status,
                    "unitOfMeasurement": productConsidered.unitOfMeasurement,
                    "sellByDate": productConsidered.sellByDate,
                    "lastSoldDate": productConsidered.lastSoldDate,
                    "dateCreated": productConsidered.dateCreated,
                    "bestBeforeDate": productConsidered.bestBeforeDate,
                    "expiryDate": productConsidered.expiryDate
            }),
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    //return response.json();
                })
                .then(() => {
                    //fetchCategories();
                    $('#editCategoryModal').modal('hide');
                    fetchAllProducts();
                })
                .catch(error => {
                    console.error('Update category error:', error);
                });
        }    
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get all nav items
        const navItems = document.querySelectorAll('.nav-item');
        const navLinks = document.querySelectorAll('.nav-link');

        // Function to remove active class from all items
        function removeActiveClass() {
            navItems.forEach((innerItem) => innerItem.classList.remove('active-nav-item'));
        }

        // Add click event listener to each nav item
        navItems.forEach((item, index) => {
            item.addEventListener('click', function () {
                removeActiveClass();
                // Add active class to clicked item
                this.classList.add('active-nav-item');
            });
        });

        // Check current URL and set active class
        const currentURL = window.location.pathname;
        navLinks.forEach((link, index) => {
            if (link.getAttribute('href') === currentURL) {
                removeActiveClass();
                navItems[index].classList.add('active-nav-item');
            }
        });
    });

</script>
</body>

</html>
